setSettings(data: Apptheme, url = '/pref.json'): void {
    if (data) {
      this.fs.writeFileSync(this.url + url, data);
    }
  }
  setLeague(league: string, settings, url = 'settings.json'): Promise<string> {
    const body = { settings: settings };

    return new Promise((res, rej) => {
      try {
        window.require('fs').mkdirSync(this.url + '/' + league);

        this.fs.writeFile(this.url + '/' + league + '/' + url, body, err => {
          if (err) {
            rej(err.message);
          }
          res('Leeague ' + league + ' saved');
        });
      } catch (err) {
        rej(err);
      }
    });
  }

  getTeam(url = './leagues'): Promise<any[]> {
    return new Promise((rs, rj) => {
      window.require('fs').readdir(this.url, (err, data: Array<string>) => {
        if (err || !data[0]) {
          let mill = { message: 'No Leagues' };

          if (err) {
            mill = err;
          }

          return rj(mill.message);
        } else {
          rs(data.filter(i => !/\.json/.test(i)));
        }
      });
    });
  }

  getSettings() {
    let data;
    try {
      data = this.fs.readFileSync(this.url + '/pref.json');

      return data;
    } catch (err) {
      console.log(err);

      data = {
        blue: true,
        white: false,
        fullScreen: false
      };
      return data;
    }
  }

  remove(name) {
    return new Promise((res, rej) => {
      try {
        const names = window.require('fs').readdirSync(this.url + '/' + name);

        names.forEach(n => {
          window.require('fs').unlinkSync(this.url + '/' + name + '/' + n);
        });
        window.require('fs').rmdirSync(this.url + '/' + name);
        res('done');
      } catch (error) {
        rej(error);
      }
    });
  }
